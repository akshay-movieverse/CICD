"""
Django settings for singapore_apis project.

Generated by 'django-admin startproject' using Django 5.0.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

import os
from pathlib import Path
from dotenv import load_dotenv

load_dotenv()



# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = 'django-insecure-t%7*f4$4hiydczds0d37)ac+5s1p33cmi0!qujap$f#9a+wsqj'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

ALLOWED_HOSTS = ['*']


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    
    #'auth_app',
    'django.contrib.sites',


    'api',
    'hongkong',

    #all auth configurations
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'allauth.socialaccount.providers.google',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'api.middleware.CSPMiddleware',
    'csp.middleware.CSPMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    # 'api.middleware.Custom404Middleware',

    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',

    # Add your custom middleware here
    # 'api.middleware.VisitorMiddleware',
    
    'singapore_apis.middleware.DomainRoutingMiddleware',
    # Add the account middleware:
    "allauth.account.middleware.AccountMiddleware",
]

ROOT_URLCONF = 'singapore_apis.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR,'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
                'api.context_processors.header_footer_data',  # Path to your context processor function
            ],
        },
    },
]

WSGI_APPLICATION = 'singapore_apis.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'password': os.getenv('DB_PASSWORD'),
        'HOST': os.getenv('DB_HOST'),   # Or your MySQL server's IP address
        'PORT': os.getenv('DB_PORT', '3306'),        # MySQL default port
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

#TIME_ZONE = 'UTC'
# Set the TIME_ZONE variable to your desired timezone
TIME_ZONE = 'Asia/Kolkata'  # For example, set it to Indian Standard Time

# Optionally, set USE_TZ to True to enable timezone support
USE_TZ = True
USE_I18N = True



# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

#STATIC_URL = 'static/'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'


STATIC_URL = '/static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR,'static')
]

STATIC_ROOT = os.path.join(BASE_DIR,'assets')





SOCIALACCOUNT_PROVIDERS = {
    'google': {
        'SCOPE' : [
            'profile',
            'email'
        ],
        'APP': {
            'client_id': os.environ['CLIENT_ID'],
            'secret': os.environ['CLIENT_SECRET'],
        },
        'AUTH_PARAMS': {
            'access_type':'online',
        }
    }
}


SITE_ID = 2
SOCIALACCOUNT_LOGIN_ON_GET=True
LOGIN_REDIRECT_URL = '/'
LOGOUT_REDIRECT_URL = '/'



AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend'
]





SESSION_COOKIE_AGE = 3600  # 1 hour
SESSION_EXPIRE_AT_BROWSER_CLOSE = True

SESSION_ENGINE = 'django.contrib.sessions.backends.db'  # Default: database-backed sessions


RAZORPAY_KEY_ID = "rzp_test_YxFIjTl4BD1hYg"
RAZORPAY_KEY_SECRET = "Q828L7wXWjkEFjPa5npZqKj4"

SECURE_REFERRER_POLICY= "strict-origin-when-cross-origin"
SECURE_CROSS_ORIGIN_OPENER_POLICY = 'same-origin-allow-popups'

# ALLOWED_HOSTS = ['localhost']

SOCIALACCOUNT_LOGIN_ON_GET=True

#TIME_ZONE = 'Asia/Kolkata'


APPEND_SLASH = True
SILENCED_SYSTEM_CHECKS = ["models.W036"]

# Content Security Protection
CSP_DEFAULT_SRC = ("'self'",)
CSP_SCRIPT_SRC = ("'self'", "https://ajax.googleapis.com","'unsafe-inline'")
CSP_STYLE_SRC = ("'self'", 'https://fonts.googleapis.com', 'http://code.jquery.com', 'https://accounts.google.com', "'unsafe-inline'")
CSP_IMG_SRC = ("'self'", 'data:')
CSP_FONT_SRC = ("'self'", 'https://fonts.gstatic.com')
CSP_CONNECT_SRC = ("'self'", 'https://accounts.google.com')
CSP_SCRIPT_SRC_ELEM = ("'self'", "https://ajax.googleapis.com", "https://cdnjs.cloudflare.com", "https://accounts.google.com","'unsafe-inline'")
CSP_FRAME_SRC = ("'self'", 'https://accounts.google.com/')


#Email
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
EMAIL_HOST = 'smtp.gmail.com'
EMAIL_PORT = 587
EMAIL_USE_TLS = True
EMAIL_HOST_USER = os.getenv('EMAIL_HOST_USER')
EMAIL_HOST_PASSWORD = os.getenv('EMAIL_HOST_PASSWORD')





import logging
import os

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        # Console handler
        'console': {
            'level': 'DEBUG',
            'class': 'logging.StreamHandler',
        },
        # File handler
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': os.path.join(BASE_DIR, 'django.log'),  # Specify log file path
        },
    },
    'loggers': {
        # Root logger
        '': {
            'handlers': ['console', 'file'],  # Specify handlers for the root logger
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}